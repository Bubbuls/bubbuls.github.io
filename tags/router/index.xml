<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>router on Kevin ALBRECHT</title>
    <link>https://KevinALBRECHT.github.io/tags/router/</link>
    <description>Recent content in router on Kevin ALBRECHT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Mon, 04 Jun 2018 07:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://KevinALBRECHT.github.io/tags/router/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Librairies Ngrx Pour Une Application Angular Reactive Part 3 Ngrx router-store</title>
      <link>https://KevinALBRECHT.github.io/posts/librairies-ngrx-pour-une-application-angular-reactive-part-3-ngrx-router-store/</link>
      <pubDate>Mon, 04 Jun 2018 07:00:00 +0200</pubDate>
      
      <guid>https://KevinALBRECHT.github.io/posts/librairies-ngrx-pour-une-application-angular-reactive-part-3-ngrx-router-store/</guid>
      <description>Voici la derniere partie sur les librairies NGRX, si vous n&amp;rsquo;avez pas déjà vu les précédentes, ça commence là → :Librairies NGRX pour une application Angular réactive. Part 1&amp;frasl;3 : ngrx/store
ngrx/router-store ngrx/router-store ? la librairie router-store est tout simplement un pont pour faire communiquer le router Angular à notre store, l&amp;rsquo;idée est de renforcer la notion de &amp;ldquo;single source of truth&amp;rdquo; du pattern Redux.
Github → https://github.com/ngrx/platform/tree/master/docs/effects
Nous allons voir 3 points principaux, fonctionnements que nous rajoutons au projet initial:</description>
    </item>
    
  </channel>
</rss>